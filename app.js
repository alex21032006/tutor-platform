// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let tg = null;
let userData = null;
let currentUser = null;
let currentChatWith = null;

// –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
const PREDEFINED_USERS = {
    "–ê–Ω–Ω–∞": { id: 1001, username: "student_anna", first_name: "–ê–Ω–Ω–∞", role: "student" },
    "–ú–∏—Ö–∞–∏–ª": { id: 1002, username: "student_mikhail", first_name: "–ú–∏—Ö–∞–∏–ª", role: "student" },
    "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞": { id: 1003, username: "student_ekaterina", first_name: "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞", role: "student" },
    "–î–º–∏—Ç—Ä–∏–π": { id: 1004, username: "student_dmitry", first_name: "–î–º–∏—Ç—Ä–∏–π", role: "student" },
    "–°–æ—Ñ–∏—è": { id: 1005, username: "student_sofia", first_name: "–°–æ—Ñ–∏—è", role: "student" },
    "–†–µ–ø–µ—Ç–∏—Ç–æ—Ä": { id: 999, username: "tutor_main", first_name: "–†–µ–ø–µ—Ç–∏—Ç–æ—Ä", role: "tutor" }
};

const CURRENT_YEAR = new Date().getFullYear();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    initializeApp();
});

async function initializeApp() {
    try {
        // –ü—ã—Ç–∞–µ–º—Å—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Telegram Web App
        if (window.Telegram && window.Telegram.WebApp) {
            tg = window.Telegram.WebApp;
            tg.expand();
            tg.enableClosingConfirmation();

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç–æ–≤—É—é —Å—Ö–µ–º—É
            tg.setHeaderColor('#667eea');
            tg.setBackgroundColor('#f8f9fa');

            console.log('Telegram Web App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } else {
            console.log('Telegram Web App –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω, —Ä–∞–±–æ—Ç–∞–µ–º –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ');
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –≤—Ö–æ–¥–∞
        showLoginScreen();

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        // –í—Å–µ —Ä–∞–≤–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –≤—Ö–æ–¥–∞
        showLoginScreen();
    }
}

function showLoginScreen() {
    const loginScreen = document.getElementById('loginScreen');
    const appContainer = document.getElementById('appContainer');
    const usersList = document.getElementById('usersList');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –≤—Ö–æ–¥–∞, —Å–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    loginScreen.classList.add('active');
    appContainer.style.display = 'none';

    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    usersList.innerHTML = Object.keys(PREDEFINED_USERS).map(userName => {
        const user = PREDEFINED_USERS[userName];
        const roleText = user.role === 'tutor' ? 'üë®‚Äçüè´ –†–µ–ø–µ—Ç–∏—Ç–æ—Ä' : 'üë®‚Äçüéì –£—á–µ–Ω–∏–∫';

        return `
            <div class="user-card" onclick="loginAs('${userName}')">
                <div class="user-avatar">${user.role === 'tutor' ? 'üë®‚Äçüè´' : 'üë®‚Äçüéì'}</div>
                <div class="user-details">
                    <div class="user-name">${userName}</div>
                    <div class="user-role">${roleText}</div>
                </div>
                <div class="login-arrow">‚Üí</div>
            </div>
        `;
    }).join('');
}

async function loginAs(userName) {
    const user = PREDEFINED_USERS[userName];
    if (!user) {
        showNotification('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    currentUser = user;
    userData = currentUser;

    // –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –≤—Ö–æ–¥–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    document.getElementById('loginScreen').classList.remove('active');
    document.getElementById('appContainer').style.display = 'block';

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    initializeUI();

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    await loadInitialData();

    showNotification(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${userName}!`);
}

function logout() {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–∞
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?')) {
        currentUser = null;
        userData = null;
        currentChatWith = null;
        showLoginScreen();
        showNotification('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    }
}

function initializeUI() {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    document.getElementById('userName').textContent = userData.first_name;
    document.getElementById('welcomeName').textContent = userData.first_name;

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    setupNavigation();

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners();

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
    setupRoleBasedUI();
}

function setupRoleBasedUI() {
    const actionsGrid = document.getElementById('actionsGrid');

    if (userData.role === 'tutor') {
        // –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞
        actionsGrid.innerHTML = `
            <button class="action-btn" onclick="openTab('progress')">
                <span class="action-icon">üìä</span>
                <span>–û—Ü–µ–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å</span>
            </button>
            <button class="action-btn" onclick="showAddHomeworkModal()">
                <span class="action-icon">üìù</span>
                <span>–î–æ–±–∞–≤–∏—Ç—å –î–ó</span>
            </button>
            <button class="action-btn" onclick="showAddScheduleModal()">
                <span class="action-icon">üïê</span>
                <span>–î–æ–±–∞–≤–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ</span>
            </button>
            <button class="action-btn" onclick="openTab('chat')">
                <span class="action-icon">üí¨</span>
                <span>–ß–∞—Ç —Å —É—á–µ–Ω–∏–∫–∞–º–∏</span>
            </button>
        `;
    } else {
        // –ö–Ω–æ–ø–∫–∏ –¥–ª—è —É—á–µ–Ω–∏–∫–∞
        actionsGrid.innerHTML = `
            <button class="action-btn" onclick="openTab('chat')">
                <span class="action-icon">üí¨</span>
                <span>–ß–∞—Ç —Å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–º</span>
            </button>
            <button class="action-btn" onclick="openTab('homework')">
                <span class="action-icon">üìù</span>
                <span>–ú–æ–∏ –∑–∞–¥–∞–Ω–∏—è</span>
            </button>
            <button class="action-btn" onclick="openTab('schedule')">
                <span class="action-icon">üïê</span>
                <span>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ</span>
            </button>
            <button class="action-btn" onclick="changePhoto()">
                <span class="action-icon">üñºÔ∏è</span>
                <span>–°–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ</span>
            </button>
        `;
    }
}

function setupNavigation() {
    const navButtons = document.querySelectorAll('.nav-btn');

    navButtons.forEach(button => {
        button.addEventListener('click', function() {
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
            navButtons.forEach(btn => btn.classList.remove('active'));
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Ç–µ–∫—É—â–µ–π –∫–Ω–æ–ø–∫–µ
            this.classList.add('active');

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª
            const tabName = this.getAttribute('data-tab');
            openTab(tabName);
        });
    });
}

function setupEventListeners() {
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ Enter
    const messageInput = document.getElementById('messageInput');
    if (messageInput) {
        messageInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });
    }
}

function openTab(tabName) {
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Ä–∞–∑–¥–µ–ª—ã
    const tabContents = document.querySelectorAll('.tab-content');
    tabContents.forEach(tab => tab.classList.remove('active'));

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª
    const activeTab = document.getElementById(tabName);
    if (activeTab) {
        activeTab.classList.add('active');

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
        loadTabData(tabName);
    }
}

async function loadTabData(tabName) {
    switch (tabName) {
        case 'dashboard':
            await loadDashboardData();
            break;
        case 'progress':
            await loadProgressData();
            break;
        case 'homework':
            await loadHomeworkData();
            break;
        case 'schedule':
            await loadScheduleData();
            break;
        case 'chat':
            await loadChatData();
            break;
    }
}

async function loadInitialData() {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
    const activeTab = document.querySelector('.tab-content.active');
    if (activeTab) {
        await loadTabData(activeTab.id);
    }
}

// üìä –î–ê–®–ë–û–†–î
async function loadDashboardData() {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    updateDashboardStats();
}

function updateDashboardStats() {
    // –ü—Ä–æ–≥—Ä–µ—Å—Å
    const progress = userData.progress ? userData.progress.value : 0;
    document.getElementById('currentProgress').textContent = `${progress}%`;

    // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞–Ω–∏–π
    const homeworkCount = userData.role === 'tutor' ? 5 : 3;
    document.getElementById('homeworkCount').textContent = homeworkCount;

    // –ë–ª–∏–∂–∞–π—à–µ–µ –∑–∞–Ω—è—Ç–∏–µ
    const nextLesson = userData.role === 'tutor' ? '–°–µ–≥–æ–¥–Ω—è 15:00' : '–ó–∞–≤—Ç—Ä–∞ 14:00';
    document.getElementById('nextLesson').textContent = nextLesson;
}

// üìà –ü–†–û–ì–†–ï–°–°
async function loadProgressData() {
    if (userData.role === 'tutor') {
        await loadTutorProgress();
    } else {
        await loadStudentProgress();
    }
}

async function loadStudentProgress() {
    const progress = userData.progress || { value: 0, comment: '–ü—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ –æ—Ü–µ–Ω–µ–Ω' };

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫—Ä—É–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    updateProgressCircle(progress.value);

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    document.getElementById('progressValue').textContent = `${progress.value} –∏–∑ 100 –±–∞–ª–ª–æ–≤`;
    document.getElementById('progressComment').textContent = progress.comment;
    document.getElementById('progressPercent').textContent = progress.value;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    await loadProgressHistory();
}

function updateProgressCircle(progress) {
    const circle = document.getElementById('progressCircle');
    const circumference = 339.292;
    const offset = circumference - (progress / 100) * circumference;
    if (circle) {
        circle.style.strokeDashoffset = offset;
    }
}

async function loadProgressHistory() {
    const historyContainer = document.getElementById('progressHistory');
    if (!historyContainer) return;

    // Mock –∏—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏
    const history = [
        { date: '15.01.' + CURRENT_YEAR, value: 85, comment: '–û—Ç–ª–∏—á–Ω—ã–µ —É—Å–ø–µ—Ö–∏!' },
        { date: '08.01.' + CURRENT_YEAR, value: 78, comment: '–•–æ—Ä–æ—à–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å' },
        { date: '25.12.' + (CURRENT_YEAR-1), value: 70, comment: '–°—Ç–∞–±–∏–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã' }
    ];

    if (history.length === 0) {
        historyContainer.innerHTML = '<p class="no-data">–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</p>';
        return;
    }

    historyContainer.innerHTML = history.map(item => `
        <div class="history-item">
            <div class="history-date">${item.date}</div>
            <div class="history-value">${item.value} –±–∞–ª–ª–æ–≤</div>
            <div class="history-comment">${item.comment}</div>
        </div>
    `).join('');
}

async function loadTutorProgress() {
    const progressContainer = document.querySelector('.progress-container');
    if (!progressContainer) return;

    // –°–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤ –¥–ª—è —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞
    const students = [
        { id: 1001, name: '–ê–Ω–Ω–∞', progress: 85, comment: '–û—Ç–ª–∏—á–Ω—ã–µ —É—Å–ø–µ—Ö–∏' },
        { id: 1002, name: '–ú–∏—Ö–∞–∏–ª', progress: 70, comment: '–•–æ—Ä–æ—à–æ, –Ω–æ –º–æ–∂–Ω–æ –ª—É—á—à–µ' },
        { id: 1003, name: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞', progress: 90, comment: '–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ!' },
        { id: 1004, name: '–î–º–∏—Ç—Ä–∏–π', progress: 65, comment: '–ù—É–∂–Ω–æ –±–æ–ª—å—à–µ –ø—Ä–∞–∫—Ç–∏–∫–∏' },
        { id: 1005, name: '–°–æ—Ñ–∏—è', progress: 0, comment: '–ù–µ –æ—Ü–µ–Ω–µ–Ω' }
    ];

    progressContainer.innerHTML = `
        <div class="students-progress">
            <h3>–ü—Ä–æ–≥—Ä–µ—Å—Å —É—á–µ–Ω–∏–∫–æ–≤</h3>
            <div class="students-list">
                ${students.map(student => `
                    <div class="student-progress-item">
                        <div class="student-info">
                            <span class="student-name">${student.name}</span>
                            <span class="student-progress">${student.progress}%</span>
                        </div>
                        <div class="progress-bar">
                            <div class="progress-fill" style="width: ${student.progress}%"></div>
                        </div>
                        <div class="student-comment">${student.comment}</div>
                        <button class="btn-small" onclick="showUpdateProgressModal(${student.id}, '${student.name}')">
                            –û—Ü–µ–Ω–∏—Ç—å
                        </button>
                    </div>
                `).join('')}
            </div>
        </div>
    `;
}

function showUpdateProgressModal(studentId, studentName) {
    const modal = document.createElement('div');
    modal.className = 'modal';
    modal.style.display = 'flex';
    modal.innerHTML = `
        <div class="modal-content">
            <h3>üìä –û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</h3>
            <p>–£—á–µ–Ω–∏–∫: <strong>${studentName}</strong></p>

            <div class="form-group">
                <label>–ü—Ä–æ–≥—Ä–µ—Å—Å (0-100%):</label>
                <input type="number" id="progressInput" min="0" max="100" value="0" class="form-input">
            </div>

            <div class="form-group">
                <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
                <textarea id="progressComment" class="form-textarea" placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π..."></textarea>
            </div>

            <div class="modal-actions">
                <button class="btn-secondary" onclick="this.closest('.modal').remove()">–û—Ç–º–µ–Ω–∞</button>
                <button class="btn-primary" onclick="updateStudentProgress(${studentId})">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
            </div>
        </div>
    `;

    document.body.appendChild(modal);

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            modal.remove();
        }
    });
}

function updateStudentProgress(studentId) {
    const progressInput = document.getElementById('progressInput');
    const commentInput = document.getElementById('progressComment');

    const progress = parseInt(progressInput.value);
    const comment = commentInput.value;

    if (progress < 0 || progress > 100) {
        showNotification('–ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 0 –¥–æ 100%');
        return;
    }

    // –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    showNotification(`–ü—Ä–æ–≥—Ä–µ—Å—Å —É—á–µ–Ω–∏–∫–∞ #${studentId} –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ ${progress}%`);

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    document.querySelector('.modal').remove();

    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    loadProgressData();
}

// üìö –î–û–ú–ê–®–ù–ò–ï –ó–ê–î–ê–ù–ò–Ø
async function loadHomeworkData() {
    if (userData.role === 'tutor') {
        await loadTutorHomework();
    } else {
        await loadStudentHomework();
    }
}

async function loadStudentHomework() {
    const homeworkList = document.getElementById('homeworkList');
    if (!homeworkList) return;

    // Mock –∑–∞–¥–∞–Ω–∏—è –¥–ª—è —É—á–µ–Ω–∏–∫–∞ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏
    const homework = [
        {
            id: 1,
            title: '–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —Ç–µ–º 1-3',
            description: '–†–µ—à–∏—Ç–µ –∑–∞–¥–∞—á–∏ –∏–∑ —É—á–µ–±–Ω–∏–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã 45-48',
            deadline: '18.01.' + CURRENT_YEAR,
            completed: false
        },
        {
            id: 2,
            title: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ',
            description: '–û—Å–æ–±—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —É–≥–ª—É–±–ª–µ–Ω–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è',
            deadline: '20.01.' + CURRENT_YEAR,
            completed: true
        },
        {
            id: 3,
            title: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ç–µ—Å—Ç—É',
            description: '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤—Å–µ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ —Ç–µ–º—ã',
            deadline: '22.01.' + CURRENT_YEAR,
            completed: false
        }
    ];

    if (homework.length === 0) {
        homeworkList.innerHTML = '<div class="no-data">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π</div>';
        return;
    }

    homeworkList.innerHTML = homework.map(item => `
        <div class="homework-item ${item.completed ? 'completed' : ''}">
            <div class="homework-title">${item.title}</div>
            <div class="homework-description">${item.description}</div>
            <div class="homework-meta">
                <span>üìÖ ${item.deadline}</span>
                <span>${item.completed ? '‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ' : '‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ'}</span>
            </div>
            ${!item.completed ? `
                <button class="btn-small" onclick="markHomeworkCompleted(${item.id})">
                    –û—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º
                </button>
            ` : ''}
        </div>
    `).join('');
}

async function loadTutorHomework() {
    const homeworkList = document.getElementById('homeworkList');
    if (!homeworkList) return;

    homeworkList.innerHTML = `
        <div class="tutor-homework-actions">
            <button class="btn-primary" onclick="showAddHomeworkModal()">
                üìù –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ
            </button>

            <div class="homework-stats">
                <h4>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–¥–∞–Ω–∏–π</h4>
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-value">5</div>
                        <div class="stat-label">–í—Å–µ–≥–æ –∑–∞–¥–∞–Ω–∏–π</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">3</div>
                        <div class="stat-label">–í—ã–ø–æ–ª–Ω–µ–Ω–æ</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">2</div>
                        <div class="stat-label">–í –ø—Ä–æ—Ü–µ—Å—Å–µ</div>
                    </div>
                </div>
            </div>

            <div class="recent-homework">
                <h4>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è</h4>
                <div class="homework-item">
                    <div class="homework-title">–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —Ç–µ–º 1-3</div>
                    <div class="homework-meta">
                        <span>üìÖ –°—Ä–æ–∫: 18.01.${CURRENT_YEAR}</span>
                        <span>üë• –î–ª—è –≤—Å–µ—Ö</span>
                    </div>
                    <div class="completion-stats">
                        ‚úÖ 3/5 —É—á–µ–Ω–∏–∫–æ–≤ –≤—ã–ø–æ–ª–Ω–∏–ª–∏
                    </div>
                </div>

                <div class="homework-item">
                    <div class="homework-title">–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ</div>
                    <div class="homework-meta">
                        <span>üìÖ –°—Ä–æ–∫: 20.01.${CURRENT_YEAR}</span>
                        <span>üë§ –î–ª—è –ê–Ω–Ω—ã</span>
                    </div>
                    <div class="completion-stats">
                        ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ
                    </div>
                </div>
            </div>
        </div>
    `;
}

function showAddHomeworkModal() {
    const modal = document.createElement('div');
    modal.className = 'modal';
    modal.style.display = 'flex';
    modal.innerHTML = `
        <div class="modal-content">
            <h3>üìù –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ</h3>

            <div class="form-group">
                <label>–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è:</label>
                <input type="text" id="homeworkTitle" class="form-input" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è">
            </div>

            <div class="form-group">
                <label>–û–ø–∏—Å–∞–Ω–∏–µ:</label>
                <textarea id="homeworkDescription" class="form-textarea" placeholder="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è..."></textarea>
            </div>

            <div class="form-group">
                <label>–î–ª—è –∫–æ–≥–æ:</label>
                <select id="homeworkStudent" class="form-select">
                    <option value="all">–í—Å–µ —É—á–µ–Ω–∏–∫–∏</option>
                    <option value="1001">–ê–Ω–Ω–∞</option>
                    <option value="1002">–ú–∏—Ö–∞–∏–ª</option>
                    <option value="1003">–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞</option>
                    <option value="1004">–î–º–∏—Ç—Ä–∏–π</option>
                    <option value="1005">–°–æ—Ñ–∏—è</option>
                </select>
            </div>

            <div class="form-group">
                <label>–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</label>
                <input type="date" id="homeworkDeadline" class="form-input">
            </div>

            <div class="modal-actions">
                <button class="btn-secondary" onclick="this.closest('.modal').remove()">–û—Ç–º–µ–Ω–∞</button>
                <button class="btn-primary" onclick="addNewHomework()">–î–æ–±–∞–≤–∏—Ç—å</button>
            </div>
        </div>
    `;

    document.body.appendChild(modal);

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–∞—Ç—É - —Å–µ–≥–æ–¥–Ω—è
    const deadlineInput = document.getElementById('homeworkDeadline');
    const today = new Date().toISOString().split('T')[0];
    deadlineInput.min = today;

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            modal.remove();
        }
    });
}

function addNewHomework() {
    const title = document.getElementById('homeworkTitle').value;
    const description = document.getElementById('homeworkDescription').value;
    const student = document.getElementById('homeworkStudent').value;
    const deadline = document.getElementById('homeworkDeadline').value;

    if (!title || !description || !deadline) {
        showNotification('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
        return;
    }

    // –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
    showNotification('–ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ!');

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    document.querySelector('.modal').remove();

    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏–π
    loadHomeworkData();
}

function markHomeworkCompleted(homeworkId) {
    showNotification(`–ó–∞–¥–∞–Ω–∏–µ #${homeworkId} –æ—Ç–º–µ—á–µ–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º!`);
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∑–∞–ø—Ä–æ—Å –∫ API
}

// üìÖ –†–ê–°–ü–ò–°–ê–ù–ò–ï
async function loadScheduleData() {
    if (userData.role === 'tutor') {
        await loadTutorSchedule();
    } else {
        await loadStudentSchedule();
    }
}

async function loadStudentSchedule() {
    const nextLessonCard = document.getElementById('nextLessonCard');
    const scheduleList = document.getElementById('scheduleList');

    // Mock —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏
    const schedule = [
        {
            id: 1,
            date: CURRENT_YEAR + '-01-16T14:00:00',
            duration: 60,
            topic: '–†–∞–∑–±–æ—Ä –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è',
            student: userData.first_name
        },
        {
            id: 2,
            date: CURRENT_YEAR + '-01-18T16:00:00',
            duration: 90,
            topic: '–ù–æ–≤–∞—è —Ç–µ–º–∞: –ü—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ',
            student: userData.first_name
        },
        {
            id: 3,
            date: CURRENT_YEAR + '-01-20T15:00:00',
            duration: 60,
            topic: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ç–µ—Å—Ç—É',
            student: userData.first_name
        }
    ];

    // –ë–ª–∏–∂–∞–π—à–µ–µ –∑–∞–Ω—è—Ç–∏–µ
    const nextClass = schedule[0];
    if (nextClass && nextLessonCard) {
        const classDate = new Date(nextClass.date);
        nextLessonCard.innerHTML = `
            <div class="next-lesson">
                <h3>üéØ –ë–ª–∏–∂–∞–π—à–µ–µ –∑–∞–Ω—è—Ç–∏–µ</h3>
                <div class="lesson-time">
                    <span class="date">${formatDate(classDate)}</span>
                    <span class="time">${formatTime(classDate)}</span>
                </div>
                <div class="lesson-topic">${nextClass.topic}</div>
                <div class="lesson-duration">‚è± ${nextClass.duration} –º–∏–Ω—É—Ç</div>
            </div>
        `;
    }

    // –°–ø–∏—Å–æ–∫ –∑–∞–Ω—è—Ç–∏–π
    if (scheduleList) {
        if (schedule.length === 0) {
            scheduleList.innerHTML = '<div class="no-data">–ù–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π</div>';
            return;
        }

        scheduleList.innerHTML = schedule.map(item => {
            const itemDate = new Date(item.date);
            return `
                <div class="schedule-item">
                    <div class="schedule-date">
                        <span class="day">${formatDate(itemDate)}</span>
                        <span class="time">${formatTime(itemDate)}</span>
                    </div>
                    <div class="schedule-topic">${item.topic}</div>
                    <div class="schedule-meta">
                        <span>‚è± ${item.duration} –º–∏–Ω</span>
                    </div>
                </div>
            `;
        }).join('');
    }
}

async function loadTutorSchedule() {
    const scheduleContainer = document.querySelector('.schedule-container');
    if (!scheduleContainer) return;

    scheduleContainer.innerHTML = `
        <div class="tutor-schedule">
            <div class="schedule-actions">
                <button class="btn-primary" onclick="showAddScheduleModal()">
                    üìÖ –î–æ–±–∞–≤–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ
                </button>
            </div>

            <div class="schedule-overview">
                <h4>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é</h4>

                <div class="schedule-item">
                    <div class="schedule-date">
                        <span class="day">–ó–∞–≤—Ç—Ä–∞</span>
                        <span class="time">14:00-15:00</span>
                    </div>
                    <div class="schedule-topic">–ó–∞–Ω—è—Ç–∏–µ —Å –ê–Ω–Ω–æ–π</div>
                    <div class="schedule-meta">
                        <span>üë§ –ê–Ω–Ω–∞</span>
                        <span>üìö –†–∞–∑–±–æ—Ä –î–ó</span>
                    </div>
                </div>

                <div class="schedule-item">
                    <div class="schedule-date">
                        <span class="day">–ó–∞–≤—Ç—Ä–∞</span>
                        <span class="time">16:00-17:30</span>
                    </div>
                    <div class="schedule-topic">–ó–∞–Ω—è—Ç–∏–µ —Å –ú–∏—Ö–∞–∏–ª–æ–º</div>
                    <div class="schedule-meta">
                        <span>üë§ –ú–∏—Ö–∞–∏–ª</span>
                        <span>üìö –ù–æ–≤–∞—è —Ç–µ–º–∞</span>
                    </div>
                </div>

                <div class="schedule-item">
                    <div class="schedule-date">
                        <span class="day">18.01</span>
                        <span class="time">15:00-16:00</span>
                    </div>
                    <div class="schedule-topic">–ì—Ä—É–ø–ø–æ–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ</div>
                    <div class="schedule-meta">
                        <span>üë• –í—Å–µ —É—á–µ–Ω–∏–∫–∏</span>
                        <span>üìö –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ç–µ—Å—Ç—É</span>
                    </div>
                </div>
            </div>
        </div>
    `;
}

function showAddScheduleModal() {
    const modal = document.createElement('div');
    modal.className = 'modal';
    modal.style.display = 'flex';
    modal.innerHTML = `
        <div class="modal-content">
            <h3>üìÖ –î–æ–±–∞–≤–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ</h3>

            <div class="form-group">
                <label>–£—á–µ–Ω–∏–∫:</label>
                <select id="scheduleStudent" class="form-select">
                    <option value="1001">–ê–Ω–Ω–∞</option>
                    <option value="1002">–ú–∏—Ö–∞–∏–ª</option>
                    <option value="1003">–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞</option>
                    <option value="1004">–î–º–∏—Ç—Ä–∏–π</option>
                    <option value="1005">–°–æ—Ñ–∏—è</option>
                </select>
            </div>

            <div class="form-group">
                <label>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:</label>
                <input type="datetime-local" id="scheduleDateTime" class="form-input">
            </div>

            <div class="form-group">
                <label>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–º–∏–Ω—É—Ç—ã):</label>
                <input type="number" id="scheduleDuration" class="form-input" value="60" min="30" max="180">
            </div>

            <div class="form-group">
                <label>–¢–µ–º–∞ –∑–∞–Ω—è—Ç–∏—è:</label>
                <input type="text" id="scheduleTopic" class="form-input" placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É –∑–∞–Ω—è—Ç–∏—è">
            </div>

            <div class="modal-actions">
                <button class="btn-secondary" onclick="this.closest('.modal').remove()">–û—Ç–º–µ–Ω–∞</button>
                <button class="btn-primary" onclick="addNewSchedule()">–î–æ–±–∞–≤–∏—Ç—å</button>
            </div>
        </div>
    `;

    document.body.appendChild(modal);

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–∞—Ç—É - —Å–µ–π—á–∞—Å
    const datetimeInput = document.getElementById('scheduleDateTime');
    const now = new Date();
    now.setMinutes(now.getMinutes() - now.getTimezoneOffset());
    datetimeInput.min = now.toISOString().slice(0, 16);

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            modal.remove();
        }
    });
}

function addNewSchedule() {
    const student = document.getElementById('scheduleStudent').value;
    const datetime = document.getElementById('scheduleDateTime').value;
    const duration = document.getElementById('scheduleDuration').value;
    const topic = document.getElementById('scheduleTopic').value;

    if (!student || !datetime || !duration || !topic) {
        showNotification('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
        return;
    }

    // –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è
    showNotification('–ù–æ–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ!');

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    document.querySelector('.modal').remove();

    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    loadScheduleData();
}

// üí¨ –ß–ê–¢
async function loadChatData() {
    if (userData.role === 'tutor') {
        await loadTutorChat();
    } else {
        await loadStudentChat();
    }
}

async function loadStudentChat() {
    // –£—á–µ–Ω–∏–∫ –≤—Å–µ–≥–¥–∞ –æ–±—â–∞–µ—Ç—Å—è —Å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–º
    currentChatWith = 999;

    const chatHeader = document.querySelector('.chat-header h2');
    if (chatHeader) {
        chatHeader.textContent = 'üí¨ –ß–∞—Ç —Å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–º';
    }

    await loadMessages();

    // –ê–≤—Ç–æ—Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    const messageInput = document.getElementById('messageInput');
    if (messageInput) {
        messageInput.focus();
    }
}

async function loadTutorChat() {
    const chatHeader = document.querySelector('.chat-header h2');
    const messagesContainer = document.getElementById('messagesContainer');
    const chatInputContainer = document.querySelector('.chat-input-container');

    if (chatHeader) {
        chatHeader.textContent = 'üí¨ –ß–∞—Ç —Å —É—á–µ–Ω–∏–∫–∞–º–∏';
    }

    // –î–ª—è —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤
    messagesContainer.innerHTML = `
        <div class="students-chat-list">
            <h3>–í—ã–±–µ—Ä–∏—Ç–µ —É—á–µ–Ω–∏–∫–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è:</h3>
            <div class="chat-students">
                <div class="chat-student-item" onclick="selectStudent(1001, '–ê–Ω–Ω–∞')">
                    <div class="student-avatar">üë©</div>
                    <div class="student-info">
                        <div class="student-name">–ê–Ω–Ω–∞</div>
                        <div class="last-message">–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: —Å–µ–≥–æ–¥–Ω—è</div>
                    </div>
                    <div class="unread-badge">3</div>
                </div>
                <div class="chat-student-item" onclick="selectStudent(1002, '–ú–∏—Ö–∞–∏–ª')">
                    <div class="student-avatar">üë®</div>
                    <div class="student-info">
                        <div class="student-name">–ú–∏—Ö–∞–∏–ª</div>
                        <div class="last-message">–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π</div>
                    </div>
                </div>
                <div class="chat-student-item" onclick="selectStudent(1003, '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞')">
                    <div class="student-avatar">üë©</div>
                    <div class="student-info">
                        <div class="student-name">–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞</div>
                        <div class="last-message">–í–æ–ø—Ä–æ—Å –ø–æ –∑–∞–¥–∞–Ω–∏—é</div>
                    </div>
                    <div class="unread-badge">1</div>
                </div>
            </div>
        </div>
    `;

    // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ–∫–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω —É—á–µ–Ω–∏–∫
    if (chatInputContainer) {
        chatInputContainer.style.display = 'none';
    }
}

function selectStudent(studentId, studentName) {
    currentChatWith = studentId;

    const chatHeader = document.querySelector('.chat-header h2');
    const chatInputContainer = document.querySelector('.chat-input-container');

    if (chatHeader) {
        chatHeader.textContent = `üí¨ –ß–∞—Ç —Å ${studentName}`;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    if (chatInputContainer) {
        chatInputContainer.style.display = 'flex';
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —É—á–µ–Ω–∏–∫–æ–º
    loadMessages();

    // –ê–≤—Ç–æ—Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    const messageInput = document.getElementById('messageInput');
    if (messageInput) {
        messageInput.focus();
    }
}

async function loadMessages() {
    const messagesContainer = document.getElementById('messagesContainer');
    if (!messagesContainer || !currentChatWith) return;

    // Mock —Å–æ–æ–±—â–µ–Ω–∏—è
    const messages = [
        {
            id: 1,
            sender_id: userData.role === 'student' ? 1001 : 999,
            receiver_id: userData.role === 'student' ? 999 : 1001,
            text: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –£ –º–µ–Ω—è –≤–æ–ø—Ä–æ—Å –ø–æ –¥–æ–º–∞—à–Ω–µ–º—É –∑–∞–¥–∞–Ω–∏—é...',
            created_at: new Date(Date.now() - 3600000).toISOString()
        },
        {
            id: 2,
            sender_id: userData.role === 'student' ? 999 : 1001,
            receiver_id: userData.role === 'student' ? 1001 : 999,
            text: '–ö–æ–Ω–µ—á–Ω–æ! –ö–∞–∫–æ–π –∏–º–µ–Ω–Ω–æ –≤–æ–ø—Ä–æ—Å?',
            created_at: new Date(Date.now() - 1800000).toISOString()
        },
        {
            id: 3,
            sender_id: userData.role === 'student' ? 1001 : 999,
            receiver_id: userData.role === 'student' ? 999 : 1001,
            text: '–ù–µ –ø–æ–Ω–∏–º–∞—é –∑–∞–¥–∞–Ω–∏–µ ‚Ññ3. –ú–æ–∂–µ—Ç–µ –æ–±—ä—è—Å–Ω–∏—Ç—å?',
            created_at: new Date(Date.now() - 600000).toISOString()
        }
    ];

    if (messages.length === 0) {
        messagesContainer.innerHTML = `
            <div class="empty-chat">
                <div class="empty-icon">üí¨</div>
                <h3>–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π</h3>
                <p>–ù–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ!</p>
            </div>
        `;
        return;
    }

    messagesContainer.innerHTML = messages.map(message => {
        const isSent = message.sender_id === userData.id;
        const time = new Date(message.created_at).toLocaleTimeString('ru-RU', {
            hour: '2-digit',
            minute: '2-digit'
        });

        return `
            <div class="message ${isSent ? 'sent' : 'received'}">
                <div class="message-text">${escapeHtml(message.text)}</div>
                <div class="message-time">${time}</div>
            </div>
        `;
    }).join('');

    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
    scrollToBottom();
}

function sendMessage() {
    if (!currentChatWith) {
        showNotification('–í—ã–±–µ—Ä–∏—Ç–µ —É—á–µ–Ω–∏–∫–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è');
        return;
    }

    const input = document.getElementById('messageInput');
    const text = input.value.trim();

    if (!text) return;

    const messagesContainer = document.getElementById('messagesContainer');
    if (!messagesContainer) return;

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const newMessage = {
        id: Date.now(),
        sender_id: userData.id,
        receiver_id: currentChatWith,
        text: text,
        created_at: new Date().toISOString()
    };

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
    const messageElement = document.createElement('div');
    messageElement.className = 'message sent';
    messageElement.innerHTML = `
        <div class="message-text">${escapeHtml(text)}</div>
        <div class="message-time">${new Date().toLocaleTimeString('ru-RU', {
            hour: '2-digit',
            minute: '2-digit'
        })}</div>
    `;

    messagesContainer.appendChild(messageElement);

    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    input.value = '';

    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
    scrollToBottom();

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');

    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
    // saveMessageToServer(newMessage);
}

// üõ†Ô∏è –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
function scrollToBottom() {
    const messagesContainer = document.getElementById('messagesContainer');
    if (messagesContainer) {
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }
}

function showNotification(text) {
    if (tg && tg.showPopup) {
        tg.showPopup({
            title: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
            message: text,
            buttons: [{ type: 'ok' }]
        });
    } else {
        alert(text);
    }
}

function showError(message) {
    const appContainer = document.querySelector('.app-container');
    if (appContainer) {
        appContainer.innerHTML = `
            <div class="error-screen">
                <div class="error-icon">‚ö†Ô∏è</div>
                <h2>–û—à–∏–±–∫–∞</h2>
                <p>${message}</p>
                <button class="btn-primary" onclick="location.reload()">
                    –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å
                </button>
            </div>
        `;
    }
}

function changePhoto() {
    const modal = document.getElementById('photoModal');
    if (modal) {
        modal.style.display = 'flex';
    }
}

function closeModal() {
    const modal = document.getElementById('photoModal');
    if (modal) {
        modal.style.display = 'none';
    }
}

function formatDate(date) {
    return date.toLocaleDateString('ru-RU', {
        day: '2-digit',
        month: '2-digit',
        year: 'numeric'
    });
}

function formatTime(date) {
    return date.toLocaleTimeString('ru-RU', {
        hour: '2-digit',
        minute: '2-digit'
    });
}

function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
window.addEventListener('click', function(event) {
    const modal = document.getElementById('photoModal');
    if (event.target === modal) {
        closeModal();
    }
});